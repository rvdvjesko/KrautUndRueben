DROP DATABASE IF EXISTS KrautUndRueben;
CREATE DATABASE IF NOT EXISTS KrautUndRueben;
USE KrautUndRueben;


-- Kunde
CREATE TABLE kunde (
  kunde_id int AUTO_INCREMENT NOT NULL,
  vorname varchar(50),
  nachname varchar(50),
  geburtsdatum date,
  straße varchar(50),
  hausnummer varchar(10),
  postleitzahl varchar(5),
  ort varchar(50),
  telefon varchar(25),
  email varchar(50),
  PRIMARY KEY (kunde_id)
);


-- Bestellung
CREATE TABLE bestellung (
  bestellung_id int AUTO_INCREMENT NOT NULL,
  bestelldatum date,
  rechnungsbetrag decimal(10,2),
  kunde_id int,
  PRIMARY KEY(bestellung_id)
);


-- Bestellung_enthält_Zutat
CREATE TABLE bestellung_enthält_zutat (
	bestellung_id int,
	zutat_id int,
	menge int,
	PRIMARY KEY (bestellung_id, zutat_id) -- auch FK
);


-- Zutat
CREATE TABLE zutat (
	zutat_id int AUTO_INCREMENT NOT NULL,
	zutatname varchar(50),
	mengeneinheit int,
	nettopreis decimal(10,2),
	bestand int,
	kalorien int,
	kohlenhydrate decimal(5,2),
	protein decimal(5,2),
	PRIMARY KEY (zutat_id)
);


-- Lieferant_liefert_Zutat
CREATE TABLE lieferant_liefert_zutat (
	lieferant_id int,
	zutat_id int,
	menge int,
	PRIMARY KEY(lieferant_id, zutat_id) -- auch FK
);


-- Lieferant
CREATE TABLE lieferant (
	lieferant_id int AUTO_INCREMENT NOT NULL,
	lieferantenname varchar(50),
	straße varchar(50),
	hausnummer varchar(10),
	postleitzahl varchar(5),
	ort varchar(50),
	telefonnummer varchar(50),
	email varchar(50),
	PRIMARY KEY (lieferant_id)
);


-- Rezept_enthält_Zutat
CREATE TABLE rezept_enthält_zutat (
	rezept_id int,
	zutat_id int,
	menge decimal(5,2),
	PRIMARY KEY (rezept_id, zutat_id) -- auch FK
);


-- Rezept
CREATE TABLE rezept (
	rezept_id int AUTO_INCREMENT NOT NULL,
	rezeptname varchar(50),
	-- nährstoffangabe_id int,-- FK
	PRIMARY KEY (rezept_id)
);


-- Mengeneinheit
CREATE TABLE mengeneinheit (
	mengeneinheit_id int,
	mengeneinheit varchar(50),
	PRIMARY KEY (mengeneinheit_id)
);


-- Ernährungskategorie
CREATE TABLE ernährungskategorie (
	ernährungskategorie_id int,
	ernährungskategorie varchar(50),
	PRIMARY KEY(ernährungskategorie_id)
);


-- Beschränkung
CREATE TABLE beschränkung (
	beschränkung_id int,
	beschränkung varchar(50),
	PRIMARY KEY(beschränkung_id)
);


-- Zutat_enthält_Ernährungskategorie
CREATE TABLE zutat_enthält_ernährungskategorie (
	zutat_id int,
	ernährungskategorie_id int,
	PRIMARY KEY (zutat_id, ernährungskategorie_id) -- auch FK
);


-- Zutat_enthält_Beschränkung
CREATE TABLE zutat_enthält_beschränkung (
	zutat_id int,
	beschränkung_id int,
	PRIMARY KEY (zutat_id, beschränkung_id) -- auch FK
);


-- Rezept_enthält_Ernährungskategorie
CREATE TABLE rezept_enthält_ernährungskategorie (
	rezept_id int,
	ernährungskategorie_id int,
	PRIMARY KEY(rezept_id, ernährungskategorie_id)
);


-- Rezept_enthält_Beschränkung
CREATE TABLE rezept_enthält_beschränkung (
	rezept_id int,
	beschränkung_id int,
	PRIMARY KEY (rezept_id, beschränkung_id)
);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

-- Bestellung
ALTER TABLE bestellung ADD FOREIGN KEY (kunde_id) REFERENCES kunde(kunde_id); 


-- Bestellung_enthält_Zutat
ALTER TABLE bestellung_enthält_zutat ADD FOREIGN KEY (bestellung_id) REFERENCES bestellung(bestellung_id);
ALTER TABLE bestellung_enthält_zutat ADD FOREIGN KEY (zutat_id) REFERENCES zutat(zutat_id);


-- Zutat
ALTER TABLE zutat ADD FOREIGN KEY (mengeneinheit) REFERENCES mengeneinheit(mengeneinheit_id);


-- Lieferant_liefert_Zutat
ALTER TABLE lieferant_liefert_zutat ADD FOREIGN KEY (lieferant_id) REFERENCES lieferant(lieferant_id);
ALTER TABLE lieferant_liefert_zutat ADD FOREIGN KEY (zutat_id) REFERENCES zutat(zutat_id);


-- Rezept_enthält_Zutat
ALTER TABLE rezept_enthält_zutat ADD FOREIGN KEY (rezept_id) REFERENCES rezept(rezept_id);
ALTER TABLE rezept_enthält_zutat ADD FOREIGN KEY (zutat_id) REFERENCES zutat(zutat_id);


-- Zutat_enthält_Ernährungskategorie
ALTER TABLE zutat_enthält_ernährungskategorie ADD FOREIGN KEY (zutat_id) REFERENCES zutat(zutat_id);
ALTER TABLE zutat_enthält_ernährungskategorie ADD FOREIGN KEY (ernährungskategorie_id) REFERENCES ernährungskategorie(ernährungskategorie_id);


-- Zutat_enthält_Beschränkung
ALTER TABLE zutat_enthält_beschränkung ADD FOREIGN KEY (zutat_id) REFERENCES zutat(zutat_id);
ALTER TABLE zutat_enthält_beschränkung ADD FOREIGN KEY (beschränkung_id) REFERENCES beschränkung(beschränkung_id);


-- Rezept_enthält_Ernährungskategorie
ALTER TABLE rezept_enthält_ernährungskategorie ADD FOREIGN KEY (rezept_id) REFERENCES rezept (rezept_id);
ALTER TABLE rezept_enthält_ernährungskategorie ADD FOREIGN KEY (ernährungskategorie_id) REFERENCES ernährungskategorie (ernährungskategorie_id);


-- Rezept_enthält_Beschränkung
ALTER TABLE rezept_enthält_beschränkung ADD FOREIGN KEY (rezept_id) REFERENCES rezept(rezept_id);
ALTER TABLE rezept_enthält_beschränkung ADD FOREIGN KEY (beschränkung_id) REFERENCES beschränkung(beschränkung_id);
